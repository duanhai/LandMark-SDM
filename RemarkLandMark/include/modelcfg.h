#ifndef MODELCFG_H_
#define MODELCFG_H_

#define LandmarkPointsNum  106

char trainFilePath[] = "/home/ren/github/sdm/ibug_300W_large_face_landmark_dataset/";    //   F:/BaiduYunDownload/ibug_300W_large_face_landmark_dataset/


//平均形状，已经对齐到[-0.5, 0.5]的矩形框内
//float mean_norm_shape[] = {-0.5,-0.498691,-0.492691,-0.482841,-0.466898,-0.469207,-0.440724,-0.418399,-0.41378,-0.392225,-0.342925,-0.298337,-0.253741,-0.204834,-0.14047,-0.0758622,0.000384927,0.0792071,0.143826,0.208183,0.25709,0.301694,0.346274,0.379138,0.398383,0.418399,0.440724,0.453041,0.469977,0.480754,0.492302,0.494611,0.5,-0.441247,-0.36903,-0.282125,-0.19749,-0.112856,0.116205,0.200839,0.285473,0.372379,0.444596,-0.000353038,-0.000353038,-0.000353038,-0.000353038,-0.128314,-0.0695281,-0.000353038,0.0660346,0.130901,-0.357383,-0.307206,-0.18,-0.132617,-0.19622,-0.311771,0.145088,0.18057,0.30853,0.361493,0.317398,0.204888,-0.363202,-0.28465,-0.195966,-0.119962,0.118229,0.199315,0.2804,0.361493,-0.241578,-0.259315,-0.246644,0.237321,0.263172,0.252525,-0.0695281,0.0738953,-0.116913,0.124065,-0.162787,0.165358,-0.225366,-0.147567,-0.0728214,0.00192744,0.0812472,0.148391,0.221609,0.166636,0.102525,0.000407159,-0.100185,-0.161263,-0.184065,-0.103218,-0.00654349,0.0973826,0.187914,0.102002,-0.00346419,-0.112009,-0.257028,0.263926,0.370515,0.304212,0.24337,0.166927,0.104524,0.0273011,-0.0358814,-0.116225,-0.179407,-0.237129,-0.271786,-0.321344,-0.366521,-0.413775,-0.454329,-0.474618,-0.5,-0.474618,-0.454329,-0.413775,-0.366521,-0.321344,-0.271786,-0.231669,-0.170827,-0.113105,-0.0296412,0.0242434,0.0928238,0.163807,0.24025,0.301092,0.370515,0.447106,0.5,0.495,0.487,0.474844,0.474844,0.487,0.495,0.5,0.447106,0.328744,0.220398,0.114618,0.0124338,-0.0363416,-0.0530421,-0.0712636,-0.0604836,-0.0437909,0.341069,0.37702,0.36007,0.301786,0.29486,0.299485,0.299485,0.362122,0.375476,0.33748,0.303846,0.29486,0.452239,0.459945,0.441974,0.424002,0.421427,0.44454,0.452239,0.452239,0.385491,0.285351,0.331576,0.382925,0.285608,0.333627,0.313604,0.31514,0.0709673,0.0771374,0.00909519,0.00909519,-0.154711,-0.165491,-0.159337,-0.159337,-0.159337,-0.16241,-0.154711,-0.221209,-0.2646,-0.286166,-0.267683,-0.219667,-0.173198,-0.180897,-0.189548,-0.177847,-0.16858,-0.188768,-0.209828,-0.197348,0.323362,0.325148};
float mean_norm_shape[] = {-0.45,-0.44515,-0.443072,-0.432679,-0.422979,-0.413337,-0.396652,-0.376559,-0.352402,-0.328002,-0.307633,-0.268503,-0.228367,-0.184351,-0.126423,-0.068276,0.000346434,0.0712864,0.129443,0.187365,0.231381,0.271525,0.311647,0.331224,0.358545,0.376559,  0.396652,0.407737,0.422979,0.432679,0.443072,0.44515,0.45,-0.397122,-0.332127,-0.253913,-0.177741,-0.10157,0.104585,0.180755,0.256926,0.335141,0.400136,-0.000317734,-0.000317734,-0.000317734,-0.000317734,-0.115483,-0.0625753,-0.000317734,0.0594311,0.117811,-0.321645,-0.276485,-0.162,-0.119355,-0.176598,-0.280594,0.130579,0.162513,0.277677,0.325344,0.285658,0.184399,-0.326882,-0.256185,-0.176369,-0.107966,0.106406,0.179384,0.25236,0.325344,-0.21742,-0.233384,-0.22198,0.213589,0.236855,0.227272,-0.0625753,0.0665058,-0.105222,0.111658,-0.146508,0.148822,-0.202829,-0.13281,-0.0655393,0.0017347,0.0731225,0.133552,0.199448,0.149972,0.0922725,0.000366443,-0.0901665,-0.145137,-0.165659,-0.0928962,-0.00588914,0.0846443,0.169123,0.0918018,-0.00311777,-0.100808,-0.231325,0.237533,-0.133463,-0.073791,-0.019033,0.049766,0.105928,0.175429,0.232293,0.304603,0.361466,0.413416,0.444607,0.48921,0.529869,0.572397,0.608896,0.637156,0.65,0.637156,0.608896,0.572397,0.529869,0.48921,0.444607,0.408502,0.353744,0.301794,0.226677,0.178181,0.116459,0.052574,-0.016225,-0.070983,-0.133463,-0.202395,-0.25,-0.2455,-0.2383,-0.22736,-0.22736,-0.2383,-0.2455,-0.25,-0.202395,-0.09587,0.001642,0.096844,0.18881,0.232707,0.247738,0.264137,0.254435,0.239412,-0.106962,-0.139318,-0.124063,-0.071607,-0.065374,-0.069536,-0.069536,-0.12591,-0.137928,-0.103732,-0.073461,-0.065374,-0.207015,-0.213951,-0.197777,-0.181602,-0.179284,-0.200086,-0.207015,-0.207015,-0.146942,-0.056816,-0.098418,-0.144633,-0.057047,-0.100264,-0.082244,-0.083626,0.136129,0.130576,0.191814,0.191814,0.33924,0.348942,0.343403,0.343403,0.343403,0.346169,0.33924,0.399088,0.43814,0.457549,0.440915,0.3977,0.355878,0.362807,0.370593,0.362062,0.351722,0.375891,0.388845,0.377613,-0.091026,-0.092633};
    
//0 1 2 14 15 16这几个点索引一般不用


//需要计算特征的landmark索引，通过一下12个点的HOG特征回归出68个点的梯度变化
// int LandmarkLength1 = 12;
// int IteraLandmarkIndex1[] = {3, 6, 8, 10, 13, 19, 24, 36, 45, 30, 48, 54};
// int LandmarkLength2 = 12;
// int IteraLandmarkIndex2[] = {3, 6, 8, 10, 13, 19, 24, 36, 45, 30, 48, 54};
// int LandmarkLength3 = 12;
// int IteraLandmarkIndex3[] = {3, 6, 8, 10, 13, 19, 24, 36, 45, 30, 48, 54};
// int LandmarkLength4 = 20;
// int IteraLandmarkIndex4[] = {3, 6, 8, 10, 13, 18, 20, 23, 25, 36, 39, 42, 45, 30, 31, 35, 48, 51, 54, 57};
// int LandmarkLength5 = 20;
// int IteraLandmarkIndex5[] = {3, 6, 8, 10, 13, 18, 20, 23, 25, 36, 39, 42, 45, 30, 31, 35, 48, 51, 54, 57};

int LandmarkLength1 = 12;
int IteraLandmarkIndex1[] = {8, 13, 16, 19, 24, 35, 40, 52, 61, 46, 84, 90};
int LandmarkLength2 = 12;
int IteraLandmarkIndex2[] = {8, 13, 16, 19, 24, 35, 40, 52, 61, 46, 84, 90};
int LandmarkLength3 = 12;
int IteraLandmarkIndex3[] = {8, 13, 16, 19, 24, 35, 40, 52, 61, 46, 84, 90};
int LandmarkLength4 = 20;
int IteraLandmarkIndex4[] = {8, 13, 16, 19, 24, 34, 36, 39, 41, 52, 55, 58, 61, 46, 82, 83, 84, 87, 90, 93};
int LandmarkLength5 = 20;
int IteraLandmarkIndex5[] = {8, 13, 16, 19, 24, 34, 36, 39, 41, 52, 55, 58, 61, 46, 82, 83, 84, 87, 90, 93};


//四次迭代
//int LandmarkLength1 = 12;
//int IteraLandmarkIndex1[] = {3, 6, 8, 10, 13, 19, 24, 36, 45, 30, 48, 54};
//int LandmarkLength2 = 20;
//int IteraLandmarkIndex2[] = {3, 6, 8, 10, 13, 18, 20, 23, 25, 36, 39, 42, 45, 30, 31, 35, 48, 51, 54, 57};
//int LandmarkLength3 = 20;
//int IteraLandmarkIndex3[] = {3, 6, 8, 10, 13, 18, 20, 23, 25, 36, 39, 42, 45, 30, 31, 35, 48, 51, 54, 57};
//int LandmarkLength4 = 38;
//int IteraLandmarkIndex4[] = {0,2,4,6,8,10,12,14,16,17,19,21,22,24,26,27,30,31,33,35,36,37,39,40,42,43,45,46,48,50,52,54,56,58,60,62,64,66};


//左右两只眼睛的索引
// int eyes_indexs[4] = {36,39,42,45};

// int extern_point_Length = 14;
// int extern_point_indexs[] = {0,16,36,37,38,39,40,41,42,43,44,45,46,47};

int eyes_indexs[4] = {52,55,58,61};

int extern_point_Length = 14;
int extern_point_indexs[] = {0,32,52,53,54,55,56,57,58,59,60,61,62,63};

////5次68个点的迭代
//int LandmarkLength1 = 68;
//int IteraLandmarkIndex1[68] = {0};
//int LandmarkLength2 = 68;
//int IteraLandmarkIndex2[68] = {0};
//int LandmarkLength3 = 68;
//int IteraLandmarkIndex3[68] = {0};
//int LandmarkLength4 = 68;
//int IteraLandmarkIndex4[68] = {0};
//int LandmarkLength5 = 68;
//int IteraLandmarkIndex5[68] = {0};



//左右眼睛的四个眼角，鼻尖点，左右两个嘴角，一共七个点，估计头部姿态，2*7+1维度的数据，最小二乘拟合出9个维度的数据，即一个3*3的旋转矩阵
//矩阵大小为15*9
float estimateHeadPoseMat[] = {  -0.258801,-0.142125,0.445513,0.101524,-0.0117096,-0.119747,-0.426367,-0.0197618,-0.143073,
                                 -0.194121,-0.210882,0.0989902,0.0822748,-0.00544055,0.0184441,-0.0628809,-0.0944775,-0.162363,
                                 0.173311,-0.205982,0.105287,0.0767408,0.0101697,0.0156599,-0.0632534,0.0774872,0.139928,
                                 0.278776,-0.109497,0.537723,0.0488799,0.00548235,0.111033,-0.471475,0.0280982,0.157491,
                                 0.0427104,-0.348899,-1.95092,0.0493076,0.0340635,0.157101,2.01808,-0.0716708,0.0860774,
                                 -0.191908,0.551951,0.456261,-0.174833,-0.0202239,-0.203346,-0.575386,0.105571,-0.171957,
                                 0.150051,0.465426,0.307133,-0.183886,-0.0123275,0.0208533,-0.4187,-0.0252474,0.0939203,
                                 0.00521464,0.229863,0.0595028,-0.480886,-0.0684972,0.43404,-0.0206778,-0.428706,0.118848,
                                 0.0125229,0.140842,0.115793,-0.239542,-0.0933311,0.0913729,-0.106839,-0.0523733,0.0697435,
                                 0.030548,-0.101407,-0.0659365,0.220726,-0.113126,0.0189044,0.0785027,-0.02235,0.0964722,
                                 0.0143054,-0.274282,-0.173696,0.477843,-0.073234,0.297015,0.180833,-0.322039,0.0855057,
                                 0.117061,-0.00704583,0.0157153,0.00142929,-0.106156,-1.29549,-0.0134561,1.22806,0.048107,
                                 -0.0663207,0.0996722,0.0374666,-0.215455,0.240434,0.233645,-0.0148478,-0.144342,-0.175324,
                                 -0.113332,-0.0876358,0.011164,0.23588,0.213911,0.2205,-0.103526,-0.258239,-0.243352,
                                 0.535077,0.000906855,-0.0336819,0.015495,0.586095,-0.14663,0.0643886,-0.114478,0.937324};










#endif
